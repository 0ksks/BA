"""
将哈夫曼编码的二进制字符串转换为61进制
"""
from hfmCodeGen import decode_hfm
uuidSet = [
            "A","B","C","D","E","F","G","H",\
            "I","J","K","L","M","N","O","P",\
            "Q","R","S","T","U","V","W","X",\
            "Y","Z","a","b","c","d","e","f",\
            "g","h","i","j","k","l","m","n",\
            "o","p","q","r","s","t","u","v",\
            "w","x","y","z","0","1","2","3",\
            "4","5","6","7","8","9"
]
biSet = [
    "1110" ,"01001","00000","10000","1000" ,"000"  ,"10001","10101",\
    "11101","0010" ,"11"   ,"00"   ,"01110","01100","1100" ,"01010",\
    "01011","111"  ,"010"  ,"00001","00011","11000","11011","11100",\
    "11110","1001" ,"011"  ,"00111","10010","0000" ,"00101","11111",\
    "0100" ,"0101" ,"11001","11010","1"    ,"110"  ,"1111" ,"001"  ,\
    "101"  ,"00100","10110","0001" ,"01111","00010","0011" ,"00110",\
    "100"  ,"10111","10"   ,"01101","1010" ,"10011","10100","01"   ,\
    "0111" ,"01000","1101" ,"0"    ,"0110" ,"1011" 
]

uuidDict = {
    "A":"1110" ,"B":"01001","C":"00000","D":"10000","E":"1000" ,"F":"000"  ,"G":"10001","H":"10101",\
    "I":"11101","J":"0010" ,"K":"11"   ,"L":"00"   ,"M":"01110","N":"01100","O":"1100" ,"P":"01010",\
    "Q":"01011","R":"111"  ,"S":"010"  ,"T":"00001","U":"00011","V":"11000","W":"11011","X":"11100",\
    "Y":"11110","Z":"1001" ,"a":"011"  ,"b":"00111","c":"10010","d":"0000" ,"e":"00101","f":"11111",\
    "g":"0100" ,"h":"0101" ,"i":"11001","j":"11010","k":"1"    ,"l":"110"  ,"m":"1111" ,"n":"001"  ,\
    "o":"101"  ,"p":"00100","q":"10110","r":"0001" ,"s":"01111","t":"00010","u":"0011" ,"v":"00110",\
    "w":"100"  ,"x":"10111","y":"10"   ,"z":"01101","0":"1010" ,"1":"10011","2":"10100","3":"01"   ,\
    "4":"0111" ,"5":"01000","6":"1101" ,"7":"0"    ,"8":"0110" ,"9":"1011" ,
}

biDict = {
    "1110" :"A","01001":"B","00000":"C","10000":"D","1000" :"E","000"  :"F","10001":"G","10101":"H",\
    "11101":"I","0010" :"J","11"   :"K","00"   :"L","01110":"M","01100":"N","1100" :"O","01010":"P",\
    "01011":"Q","111"  :"R","010"  :"S","00001":"T","00011":"U","11000":"V","11011":"W","11100":"X",\
    "11110":"Y","1001" :"Z","011"  :"a","00111":"b","10010":"c","0000" :"d","00101":"e","11111":"f",\
    "0100" :"g","0101" :"h","11001":"i","11010":"j","1"    :"k","110"  :"l","1111" :"m","001"  :"n",\
    "101"  :"o","00100":"p","10110":"q","0001" :"r","01111":"s","00010":"t","0011" :"u","00110":"v",\
    "100"  :"w","10111":"x","10"   :"y","01101":"z","1010" :"0","10011":"1","10100":"2","01"   :"3",\
    "0111" :"4","01000":"5","1101" :"6","0"    :"7","0110" :"8","1011" :"9",
}

def genCodeInLenUnit(length,i=0,st="",res=[]):
    if i==length:
        res.append(st)
        return res
    return genCodeInLenUnit(length,i+1,st+"0",res) + genCodeInLenUnit(length,i+1,st+"1",res)

def genCodeInLen(length,row):
    res = []
    for i in range(1,length+1):
        res+=list(set(genCodeInLenUnit(i)))
    res = list(set(res))
    for i in range(len(res)):
        print("\""+res[i]+"\""+" "*(length-len(res[i]))+",",end="")
        if divmod(i,row)[1]==row-1:print("\\")

def genDICT(row,length,uuidSet,biSet):
    print()
    for i in range(len(biSet)):
        print("\""+uuidSet[i]+"\":\""+biSet[i]+"\""+" "*(length-len(biSet[i]))+",",end="")
        if divmod(i,row)[1]==row-1:print("\\")
    print()
    print()
    for i in range(len(biSet)):
        print("\""+biSet[i]+"\""+" "*(length-len(biSet[i]))+":\""+uuidSet[i]+"\""+",",end="")
        if divmod(i,row)[1]==row-1:print("\\")
    print()

def getUUID(BI):
    tmp = len(uuidSet)
    tmp += 2
    codeLen = 0
    while tmp!=0:
        codeLen+=1
        tmp//=2
    codeLen-=2
    UUID = ""
    tmp = 0
    while tmp<len(BI):
        UUID+=biDict[BI[tmp:tmp+codeLen]]
        tmp+=codeLen
    return UUID

def getBI(UUID):
    BI = ""
    try:
        for ch in UUID:
            BI+=uuidDict[ch]
    except:return "nan"
    return BI

def getData(UUID,hfmT):
    bi = getBI(UUID)
    if bi=="nan":return ["nan",]
    return decode_hfm(getBI(UUID),hfmT)